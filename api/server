#!/usr/bin/env node

const express = require("express");
const bodyParser = require("body-parser");
const fetch = require("node-fetch");

const app = express();
app.use(bodyParser.json());
const langs = ["python", "ruby"];

const format = ({ code, lang, opts }) => {
  if (!langs.includes(lang)) {
    return Promise.reject(new Error(`Invalid lang: ${lang}`));
  }

  const fetchOpts = {
    method: "POST",
    body: JSON.stringify({ code, opts }),
    headers: {
      "Content-Type": "application/json"
    }
  };

  return fetch(`http://${lang}:8080`, fetchOpts).then(res => {
    return new Promise(function(resolve, reject) {
      res
        .json()
        .then(data => resolve({ status: res.status, data: data }))
        .catch(reject);
    });
  });
};


app.use((req, res, next) => {
  console.log(`[${new Date().toUTCString()}] ${req.method} ${req.path}`);

  res.setHeader("Access-Control-Allow-Origin", "*");
  res.setHeader("Access-Control-Allow-Methods", "OPTIONS, POST");
  res.setHeader('Access-Control-Allow-Headers', 'Content-Type');

  next();
});

app.post("/", (req, res) => {
  const { code, lang, opts = {} } = req.body;

  format({ code, lang, opts })
    .then(({ status, data }) => {
      res.status(status).send({ ...data, lang });
    })
    .catch(error => {
      res.status(422).send({ error: error.message });
    });
});

app.listen(8080, () => console.log("Listening on 8080..."));
